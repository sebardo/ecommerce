{% extends twig_global.getParameter('extended_layout_admin') ? twig_global.getParameter('extended_layout_admin') : 'AdminBundle:Base:layout.html.twig' %}

{% block section %}products{% endblock %}

{% block content %}
    
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
        {{ entity.name }}
        <small></small>
      </h1>
      <ol class="breadcrumb">
        <li><a href="{{ path('admin_default_index') }}"> <i class="ion-home"></i>  {{ "home" | trans }}</a></li>
        <li><a href="javascript:">{{ "catalogue" | trans }}</a></li>
        <li><a href="{{ path('ecommerce_product_index') }}">{{ "product.plural" | trans }}</a></li>
        <li><a href="{{ path('ecommerce_product_show', { id: entity.id }) }}">{{ entity.name }}</a></li>
      </ol>
    </section>
    
    <section class="content">
      <div class="row">
          <div class="col-md-12">
               {% include 'CoreBundle:Base:alert.messages.html.twig' %}
               
            <!-- Custom Tabs -->
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                  <li class="{{ not app.request.get('attributes') and
                                not app.request.get('features') and
                                not app.request.get('images') and
                                not app.request.get('related') ? 'active' }}">
                      <a href="#info_tab" data-toggle="tab">{{ "information" | trans }}</a>
                  </li>
                  <li class="{{ app.request.get('attributes') ? 'active' }}"><a href="#attributes_tab" data-toggle="tab">{{ "attribute.plural" | trans }}</a></li>
                  <li class="{{ app.request.get('images') ? 'active' }}"><a href="#images_tab" data-toggle="tab">{{ "image.plural" | trans }}</a></li>
                  <li class="{{ app.request.get('features') ? 'active' }}"><a href="#features_tab" data-toggle="tab">{{ "feature.plural" | trans }}</a></li>
                  <li class="{{ app.request.get('related') ? 'active' }}"><a href="#related_tab" data-toggle="tab">{{ "product.related" | trans }}</a></li>
                    
                </ul>
                <div class="tab-content">
                    <div class="tab-pane {{ not app.request.get('attributes') and
                                            not app.request.get('features') and
                                            not app.request.get('images') and
                                            not app.request.get('related') ? 'active' }}" id="info_tab">
                        <div class="box-body show-tables">
                            <table class="table">
                                <tbody>
                                <tr>
                                    <td>{{ "name" | trans }}</td>
                                    <td>{{ entity.name }}</td>
                                </tr>
                                 <tr>
                                    <td>{{ "description" | trans }}</td>
                                    <td>
                                        {{ entity.description  }}
                                    </td>
                                </tr>
                                 <tr>
                                    <td>{{ "slug" | trans }}</td>
                                    <td>
                                        {{ entity.slug  }}
                                    </td>
                                </tr>
                                <tr>
                                    <td>{{ "actor.singular" | trans }}</td>
                                    <td>
                                        {% if entity.actor.id is defined %}
                                        <a href="{{ path('core_actor_show', {id: entity.actor.id}) }}">{{ entity.actor.name }}</a>
                                        {% endif %}
                                    </td>
                                </tr>
                                <tr>
                                    <td>{{ "category.singular" | trans }}</td>
                                    <td><a href="{{ path('ecommerce_category_show', {id: entity.category.id}) }}">{{ entity.category }}</a></td>
                                </tr>
                                <tr>
                                    <td>{{ "brand.singular" | trans }}</td>
                                    <td><a href="{{ path('ecommerce_brand_show', {id: entity.brand.id}) }}">{{ entity.brand }}</a></td>
                                </tr>
                                {% if entity.model.id is defined %}
                                <tr>
                                    <td>{{ "model.singular" | trans }}</td>
                                    <td><a href="{{ path('ecommerce_brandmodel_show', {id: entity.model.id}) }}">{{ entity.model }}</a></td>
                                </tr>
                                {% endif %}
                                <tr>
                                    <td>{{ "initPrice" | trans }}</td>
                                    <td>{{ entity.initPrice | price }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "price" | trans }}</td>
                                    <td>{{ entity.price | prices(entity.priceType) }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "priceType" | trans }}</td>
                                    <td>{% if entity.discountType %}Porcentaje "%"{% else %}Fijo "€"{%endif %} </td>
                                </tr>
                                <tr>
                                    <td>{{ "discount" | trans }}</td>
                                    <td>{{ (entity.discount == '') ? '-' : entity.discount }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "discountType" | trans }}</td>
                                    <td>{% if entity.discountType == 0 %}Porcentaje "%"{% elseif (entity.discountType == 1)%}Fijo "€"{% else%}-{%endif %}</td>
                                </tr>
                               
                                
                                
                                <tr>
                                    <td>{{ "stock" | trans }}</td>
                                    <td>{{ entity.stock }}</td>
                                </tr>
                                
                                <tr>
                                    <td>{{ "weight" | trans }}</td>
                                    <td>{{ entity.weight }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "reference" | trans }}</td>
                                    <td>{{ entity.reference }}</td>
                                </tr>
                                
                                <tr>
                                    <td>{{ "active" | trans }}</td>
                                    <td>
                                        {% if entity.active %}
                                            <span class="label label-success">{{ "yes" | trans }}</span>
                                        {% else %}
                                            <span class="label label-warning">{{ "no" | trans }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                                <tr>
                                    <td>{{ "available" | trans }}</td>
                                    <td>
                                        {% if entity.available %}
                                            <span class="label label-success">{{ "yes" | trans }}</span>
                                        {% else %}
                                            <span class="label label-danger">{{ "no" | trans }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                                <tr>
                                    <td>{{ "highlighted" | trans }}</td>
                                    <td>
                                        {% if entity.highlighted %}
                                            <span class="label label-success">{{ "yes" | trans }}</span>
                                        {% else %}
                                            <span class="label label-danger">{{ "no" | trans }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                                <tr>
                                    <td>{{ "freeTransport" | trans }}</td>
                                    <td>
                                        {% if entity.freeTransport %}
                                            <span class="label label-success">{{ "yes" | trans }}</span>
                                        {% else %}
                                            <span class="label label-danger">{{ "no" | trans }}</span>
                                        {% endif %}
                                    </td>
                                </tr>
                                
                                <tr>
                                    <td>{{ "meta.title" | trans }}</td>
                                    <td>{{ entity.metaTitle }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "meta.description" | trans }}</td>
                                    <td>{{ entity.metaDescription | nl2br }}</td>
                                </tr>
                                <tr>
                                    <td>{{ "meta.tags" | trans }}</td>
                                    <td>{{ entity.metaTags }}</td>
                                </tr>
                                <tr>
                                    <td>Estadisticas</td>
                                    <td>
                                        <!-- Date range -->
                                        <div class="form-group">
                                          <div class="input-group">
                                            <div class="input-group-addon">
                                              <i class="fa fa-calendar"></i>
                                            </div>
                                            <input type="text" class="form-control pull-right" id="stats-range" value="{{ "now"|date_modify("-1 month")|date("Y-m-d") }} to {{ 'now'|date('Y-m-d')}}"  />
                                            <div class="input-group-addon" style="border: 0; padding: 0px;"><a id="search-stats" class="btn btn-flat btn-info">Buscar</a></div>
                                          </div><!-- /.input group -->
                                        </div><!-- /.form group -->
                                        {% set stats = get_product_stats(entity, "now"|date_modify("-1 month")|date("Y-m-d"), 'now'|date('Y-m-d'))%}
                                        {% if stats|length > 0%}
                                            <script>
                                                var statsLabel = [{% for stat in stats %}"{{ stat.day }}"{% if not loop.last%},{% endif %}{% endfor %}]
                                                var statsData = [{% for stat in stats %}"{{ stat.visits }}"{% if not loop.last%},{% endif %}{% endfor %}]
                                            </script>
                                            <div class="box-body">
                                              <div class="row">
                                                <div class="col-md-12">
                                                  <p class="text-center">
                                                    <strong>Estadisticas: {{stats.first.day}} to {{stats.last.day}}</strong>
                                                  </p>
                                                  <div class="chart" style="height: 260px;">
                                                    <!-- Sales Chart Canvas -->
                                                    <canvas id="salesChart" height="250"></canvas>
                                                  </div><!-- /.chart-responsive -->
                                                </div><!-- /.col -->
                                              </div><!-- /.row -->
                                            </div><!-- ./box-body -->
                                        {% endif %}
                                        
                                    </td>
                                </tr>
                                </tbody>
                            </table>
                        </div>   
                        <div class="box-footer">
                            <a href="{{ path('ecommerce_product_edit', { id: entity.id }) }}" class="btn btn-primary btn-flat"><i class="ion-compose"></i> {{ "edit.singular" | trans }}</a>
                            <button type="submit" class="btn btn-danger btn-flat pull-right" id="delete-btn">{{ "delete" | trans }}</button>
                            <form id="delete-entity" action="{{ path('ecommerce_product_delete', { id: entity.id }) }}" method="post">
                                <input type="hidden" name="_method" value="DELETE" />
                                {{ form_widget(delete_form) }}
                            </form>
                        </div>
                    </div>

                    <div class="tab-pane {{ app.request.get('attributes') ? 'active' }}" id="attributes_tab">
                        <div class="box-body show-tables">
                            <table class="table">
                                <tbody>
                                {% for attributeValue in entity.attributeValues %}
                                    <tr>
                                        <td>
                                            <a href="{{ path('ecommerce_attribute_show', { id: attributeValue.attribute.id }) }}">
                                                {{ attributeValue.attribute.name }}
                                            </a>
                                        </td>
                                        <td>
                                            {% if attributeValue.image %}
                                                <img width="100" src="{{ asset('uploads/images/' ~ attributeValue.image.path)  }}" />
                                            {% elseif attributeValue.attribute.image %}
                                                <img width="100" src="{{ asset('uploads/images/' ~ attributeValue.attribute.image.path) }}" />
                                            {% endif %}

                                            <a href="{{ path('ecommerce_attributevalue_show', { attributeId: attributeValue.attribute.id, id: attributeValue.id }) }}">
                                                {{ attributeValue.name }}
                                            </a>
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>   
                        <div class="box-footer">
                            <a href="{{ path('ecommerce_product_edit', { id: entity.id, attributes: 1 }) }}" class="btn btn-primary btn-flat"><i class="ion-compose"></i> {{ "edit.singular" | trans }}</a>
                        </div>
                    </div>
                    <div class="tab-pane {{ app.request.get('features') ? 'active' }}" id="features_tab">
                        <div class="box-body show-tables">
                            <table class="table">
                                <tbody>
                                {% for featureValue in entity.featureValues %}
                                    <tr>
                                        <td>
                                            <a href="{{ path('ecommerce_feature_show', { id: featureValue.feature.id }) }}">
                                                {{ featureValue.feature.name }}
                                            </a>
                                        </td>
                                        <td>
                                            {% if featureValue.image %}
                                                <img width="100" src="{{ asset('uploads/images/' ~ featureValue.image.path) }}" />
                                            {% elseif featureValue.feature.image %}
                                                <img width="100" src="{{ asset('uploads/images/' ~ featureValue.feature.image.path) }}" />
                                            {% endif %}

                                            <a href="{{ path('ecommerce_featurevalue_show', { featureId: featureValue.feature.id, id: featureValue.id }) }}">
                                                {{ featureValue.name }}
                                            </a>
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        <div class="box-footer">
                            <a href="{{ path('ecommerce_product_edit', { id: entity.id, features: 1 }) }}" class="btn btn-primary btn-flat"><i class="ion-compose"></i> {{ "edit.singular" | trans }}</a>
                        </div>
                    </div>
                    <div class="tab-pane {{ app.request.get('images') ? 'active' }}" id="images_tab">
                        <div class="box-body show-entity-images">
                                {% for image in entity.images %}
                                    <img width="200" src="{{ asset('uploads/images/product/' ~ entity.id ~ '/' ~ image.path) }}" alt="{{ "image.of.entity" | trans({ '%entity%': entity.name }) }}" />
                                {% else %}
                                    <img width="200" src="{{ asset('bundles/core/images/no-image.jpg') }}" />
                                {% endfor %}
                        </div>   
                        <div class="box-footer">
                            <a href="{{ path('ecommerce_product_edit', { id: entity.id, images: 1 }) }}" class="btn bg-purple btn-flat"><i class="ion-camera"></i> {{ "image.manage" | trans }}</a>
                        </div>
                    </div>
                    <div class="tab-pane {{ app.request.get('related') ? 'active' }}" id="related_tab">
                        <div class="box-body">
                            <table class="table">
                                <tbody>
                                {% for product in entity.relatedProducts %}
                                    <tr>
                                        <td>
                                            <a href="{{ path('ecommerce_product_show', { id: product.id }) }}">
                                                {% if product.images is not empty %}
                                                    {% set image = product.images | first %}
                                                    <img src="{{ asset('uploads/images/products/' ~ product.id ~ '/thumbnail/' ~ image.path) }}" alt="{{ product.name }}" />
                                                {% else %}
                                                    <img src="{{ asset('bundles/core/images/no-image.jpg') }}" />
                                                {% endif %}
                                            </a>
                                        </td>
                                        <td>
                                            <a href="{{ path('ecommerce_product_show', { id: product.id }) }}" title="{{ product.name }}">{{ product.name }}</a>
                                        </td>
                                        <td>
                                            <a href="{{ path('ecommerce_category_show', { id: product.category.id }) }}" title="{{ product.category.name }}">{{ product.category.name }}</a>
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>

                        <div class="box-footer">
                            <a href="{{ path('ecommerce_product_edit', { id: entity.id, related: 1 }) }}" class="btn btn-primary btn-flat"><i class="ion-compose"></i> {{ "edit.singular" | trans }}</a>
                        </div>
                         
                    </div>
                </div>
            </div>
          </div>
      </div>
    </section>
     
{% endblock %}



{% block javascripts %}
    {{parent()}}
    
    
    <!-- date-range-picker  AND 'https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js' -->
    {% javascripts 
        'bundles/admin/plugins/daterangepicker/daterangepicker.js'
        
        %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
    
    <!-- Page script -->
    <script type="text/javascript">
      $(function () {
        productId = {{entity.id}}
        //Date range picker
        $('#stats-range').daterangepicker({
            format: 'YYYY-MM-DD',
            separator: ' to ',
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
                'Last 7 Days': [moment().subtract('days', 6), moment()],
                'Last 30 Days': [moment().subtract('days', 29), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
            },
            startDate: moment().subtract('days', 29),
            endDate: moment()
        });
       
       });
       jQuery(document).ready(function() {
            $('#delete-btn').on('click', function(e) {
                e.preventDefault();

                if (confirm('{{ "are.you.sure" | trans }}')) {
                    $('#delete-entity').submit();
                }
            });
        });
    </script>
 
    {% if entity.stats|length > 0%}
        {% verbatim %}
            <script>

                $(function () {   
                    /* ChartJS
                    * -------
                    * Here we will create a few charts using ChartJS
                    */

                   //-----------------------
                   //- MONTHLY SALES CHART -
                   //-----------------------

                   // Get context with jQuery - using jQuery's .get() method.
                   var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
                   // This will get the first returned node in the jQuery collection.
                   var salesChart = new Chart(salesChartCanvas);

                   var salesChartData = {
                     labels: statsLabel,
                     datasets: [
                       {
                         label: "Visitas de perfil de actora",
                         fillColor: "rgba(60,141,188,0.9)",
                         strokeColor: "rgba(60,141,188,0.8)",
                         pointColor: "#3b8bba",
                         pointStrokeColor: "rgba(60,141,188,1)",
                         pointHighlightFill: "#fff",
                         pointHighlightStroke: "rgba(60,141,188,1)",
                         data: statsData
                       }
                     ]
                   };
                   
                   

                   var salesChartOptions = {
                     //Boolean - If we should show the scale at all
                     showScale: true,
                     //Boolean - Whether grid lines are shown across the chart
                     scaleShowGridLines: false,
                     //String - Colour of the grid lines
                     scaleGridLineColor: "rgba(0,0,0,.05)",
                     //Number - Width of the grid lines
                     scaleGridLineWidth: 1,
                     //Boolean - Whether to show horizontal lines (except X axis)
                     scaleShowHorizontalLines: true,
                     //Boolean - Whether to show vertical lines (except Y axis)
                     scaleShowVerticalLines: true,
                     //Boolean - Whether the line is curved between points
                     bezierCurve: true,
                     //Number - Tension of the bezier curve between points
                     bezierCurveTension: 0.3,
                     //Boolean - Whether to show a dot for each point
                     pointDot: false,
                     //Number - Radius of each point dot in pixels
                     pointDotRadius: 4,
                     //Number - Pixel width of point dot stroke
                     pointDotStrokeWidth: 1,
                     //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                     pointHitDetectionRadius: 20,
                     //Boolean - Whether to show a stroke for datasets
                     datasetStroke: true,
                     //Number - Pixel width of dataset stroke
                     datasetStrokeWidth: 2,
                     //Boolean - Whether to fill the dataset with a color
                     datasetFill: true,
                     //String - A legend template
                     legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%=datasets[i].label%></li><%}%></ul>",
                     //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                     maintainAspectRatio: false,
                     //Boolean - whether to make the chart responsive to window resizing
                     responsive: true
                   };

                   //Create the line chart
                   salesChart.Line(salesChartData, salesChartOptions);
                  
                   var resetCanvas = function () {
                    $('#salesChart').remove(); // this is my <canvas> element
                    $('.chart').append('<canvas id="salesChart"><canvas>');
                    canvas = document.querySelector('#salesChart');
                    ctx = canvas.getContext('2d');
                    ctx.canvas.width = $('#chart').width(); // resize to parent width
                    ctx.canvas.height = $('#chart').height(); // resize to parent height

                    var x = canvas.width/2;
                    var y = canvas.height/2;
                    ctx.font = '10pt Verdana';
                    ctx.textAlign = 'center';
                    ctx.fillText('This text is centered on the canvas', x, y);
                  };
                  
                  function array_values(input) {
                    var tmp_arr = [],
                      key = '';

                    if (input && typeof input === 'object' && input.change_key_case) { // Duck-type check for our own array()-created PHPJS_Array
                      return input.values();
                    }

                    for (key in input) {
                      tmp_arr[tmp_arr.length] = input[key];
                    }

                    return tmp_arr;
                  }

                   function updateChart(){
                        console.log('update');
                        var range = $('#stats-range').val();
                        var myarr = range.split(" to ");
                        $.ajax({
                            method: "GET",
                            url: "/admin/products/stats/"+productId+"/"+myarr[0]+"/"+myarr[1]
                        })
                        .done(function( data ) {
                            
                            var labelsArr = data.labels.split(",");
                            var visitsArr = data.visits.split(",");                            
                            
                            $('#salesChart').remove(); // this is my <canvas> element
                            $('.chart').append('<canvas id="salesChart"><canvas>');
                            canvas = document.querySelector('#salesChart');
                            ctx = canvas.getContext('2d');
                            ctx.canvas.width = $('#chart').width(); // resize to parent width
                            ctx.canvas.height = $('#chart').height(); // resize to parent height
                            var x = canvas.width/2;
                            var y = canvas.height/2;
                            ctx.font = '10pt Verdana';
                            ctx.textAlign = 'center';
                            ctx.fillText('This text is centered on the canvas', x, y);

                            startingData = {
                                labels: array_values(labelsArr),
                                datasets: [
                                    {
                                        label: "Visitas de perfil de actora",
                                        fillColor: "rgba(60,141,188,0.9)",
                                        strokeColor: "rgba(60,141,188,0.8)",
                                        pointColor: "#3b8bba",
                                        pointStrokeColor: "rgba(60,141,188,1)",
                                        pointHighlightFill: "#fff",
                                        pointHighlightStroke: "rgba(60,141,188,1)",
                                        data: array_values(visitsArr)
                                    }
                                ]
                           }
                           // Get context with jQuery - using jQuery's .get() method.
                            var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
                            // This will get the first returned node in the jQuery collection.
                            var salesChart = new Chart(salesChartCanvas);
                           salesChart.Line(startingData, salesChartOptions);
                        });
                   }
                   $('#search-stats').on('click', function(e) {
                         updateChart();
                    });
                   //---------------------------
                   //- END MONTHLY SALES CHART -
                   //---------------------------
                });

                jQuery(document).ready(function() {

                    $('#delete-btn').on('click', function(e) {
                        e.preventDefault();

                        if (confirm('{{ "are.you.sure" | trans }}')) {
                            $('#delete-entity').submit();
                        }
                    });
                    
                    
                });

            </script>
        {% endverbatim %}
    {% endif %}
   
{% endblock %}
 